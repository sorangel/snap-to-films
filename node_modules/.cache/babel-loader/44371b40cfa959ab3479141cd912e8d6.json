{"ast":null,"code":"var _jsxFileName = \"/home/sora/Escritorio/Archivos-de-ReactjS/snap-to-films/src/LoginView/loginView.js\";\nimport React, { Component } from \"react\";\nimport { Register } from \"../components/Login/register\";\nimport { Login } from \"../components/Login\";\n\nclass LoginView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoginActive: true\n    };\n  }\n\n  componentDidMount() {\n    this.rightSide.classList.add(\"right\");\n  }\n\n  changeState() {\n    const {\n      isLoginActive\n    } = this.state;\n\n    if (isLoginActive) {\n      this.rightSide.classList.remove(\"right\");\n      this.rightSide.classList.add(\"left\");\n    } else {\n      this.rightSide.classList.remove(\"left\");\n      this.rightSide.classList.add(\"right\");\n    }\n\n    this.setState(prevState => ({\n      isLoginActive: !prevState.isLoginActive\n    }));\n  }\n\n  render() {\n    const {\n      isLoginActive\n    } = this.state;\n    const current = isLoginActive ? \"Register\" : \"Login\";\n    const currentActive = isLoginActive ? \"login\" : \"register\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loginView \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      ref: ref => this.container = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, isLoginActive && /*#__PURE__*/React.createElement(Login, {\n      containerRef: ref => this.current = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }), !isLoginActive && /*#__PURE__*/React.createElement(Register, {\n      containerRef: ref => this.current = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(RightSide, {\n      current: current,\n      currentActive: currentActive,\n      containerRef: ref => this.rightSide = ref,\n      onClick: this.changeState.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nconst RightSide = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right-side\",\n    ref: props.containerRef,\n    onClick: props.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inner-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, props.current)));\n};\n\nexport default LoginView;","map":{"version":3,"sources":["/home/sora/Escritorio/Archivos-de-ReactjS/snap-to-films/src/LoginView/loginView.js"],"names":["React","Component","Register","Login","LoginView","constructor","props","state","isLoginActive","componentDidMount","rightSide","classList","add","changeState","remove","setState","prevState","render","current","currentActive","ref","container","bind","RightSide","containerRef","onClick"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\";\nimport {Register} from \"../components/Login/register\";\nimport {Login} from \"../components/Login\";\n\n\nclass LoginView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoginActive: true\n        };\n    }\n\n    componentDidMount() {\n        this.rightSide.classList.add(\"right\");\n    }\n\n    changeState() {\n        const { isLoginActive } = this.state;\n\n        if (isLoginActive) {\n            this.rightSide.classList.remove(\"right\");\n            this.rightSide.classList.add(\"left\");\n        } else {\n            this.rightSide.classList.remove(\"left\");\n            this.rightSide.classList.add(\"right\");\n        }\n        this.setState(prevState => ({ isLoginActive: !prevState.isLoginActive }));\n    }\n\n    render() {\n        const { isLoginActive } = this.state;\n        const current = isLoginActive ? \"Register\" : \"Login\";\n        const currentActive = isLoginActive ? \"login\" : \"register\";\n        return (\n            <div className=\"loginView \">\n                <div className=\"login\">\n                    <div className=\"container\" ref={ref => (this.container = ref)}>\n                        {isLoginActive && (\n                            <Login containerRef={ref => (this.current = ref)} />\n                        )}\n                        {!isLoginActive && (\n                            <Register containerRef={ref => (this.current = ref)} />\n                        )}\n                    </div>\n                    <RightSide\n                        current={current}\n                        currentActive={currentActive}\n                        containerRef={ref => (this.rightSide = ref)}\n                        onClick={this.changeState.bind(this)}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst RightSide = props => {\n    return (\n        <div\n            className=\"right-side\"\n            ref={props.containerRef}\n            onClick={props.onClick}\n        >\n            <div className=\"inner-container\">\n                <div className=\"text\">{props.current}</div>\n            </div>\n        </div>\n    );\n};\n\nexport default LoginView;"]},"metadata":{},"sourceType":"module"}